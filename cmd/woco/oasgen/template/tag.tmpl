{{/* gotype: github.com/tsingsun/woocoo/cmd/woco/oasgen.Tag */}}
{{ define "tag" }}
{{ $pkg := base $.Config.Package }}
{{ template "header" $ }}

{{ template "import" $ }}

{{ range .Operations }}
    {{- if .HasRequest }}
        type {{ .RequestName }} struct {
        {{- if .Request.BindUri }}
            UriParams {{ .RequestName }}UriParams
        {{- end }}
        {{- if .Request.BindHeader }}
            HeaderParams {{ .RequestName }}HeaderParams
        {{- end }}
        {{- if .Request.BindCookie }}
            CookieParams {{ .RequestName }}CookieParams
        {{- end }}
        {{- if .Request.BindBody }}
            {{ .RequestBodyName }} {{ if not .SimpleBody }}{{ .RequestName }}Body {{ else }}{{ .SimpleBody.Schema.Type.StructString }} {{ .SimpleBody.Schema.StructTagsString }}{{ end }}
        {{- end }}
        }
        {{ if .Request.BindUri }}
            type {{ .RequestName }}UriParams struct {
            {{- range .Request.UriParameters }}
                {{ pascal .Name }} {{ .Schema.Type.String }} `{{ join .Schema.StructTags " " }}`{{ end }}
            }

        {{- end }}
        {{- if .Request.BindHeader }}
            type {{ .RequestName }}HeaderParams struct {
            {{- range .Request.HeaderParameters }}
                {{ pascal .Name }} {{ .Schema.Type.String }} `{{ join .Schema.StructTags " " }}`{{ end }}
            }
        {{- end }}
        {{- if .Request.BindCookie }}
            type {{ .RequestName }}CookieParams struct {
            {{- range .Request.CookieParameters }}
                {{ pascal .Name }} {{ .Schema.Type.String }} `{{ join .Schema.StructTags " " }}`{{ end }}
            }
        {{- end }}
        {{- if and .Request.BindBody (not .SimpleBody ) }}
            type {{ .RequestName }}Body struct {
            {{- range .Request.Body }}
                {{- if .Schema.IsInline }}
                    {{ .Schema.Type }} `json:",inline"`
                {{- else }}
                    {{ pascal .Name }} {{ .Schema.Type.String }} `{{ join .Schema.StructTags " " }}`{{ end }}
                {{- end }}
            }
        {{- end }}
    {{ end }}
    {{- if .HasResponse}}
        {{- with .ResponseOK}}
            {{ if and (not .Schema.IsRef) .Schema.Properties }}
                type {{ pascal .Schema.Name }} struct {
                    {{ template "help/properties" .Schema}}
                }
            {{- end }}
        {{ end }}
    {{ end }}
{{ end }}
{{ end }}