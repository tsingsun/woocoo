// Code generated by woco, DO NOT EDIT.

package petstore

// AddPetRequest Pet object that needs to be added to the store
type AddPetRequest struct {
	NewPet `json:",inline"`
}

type DeletePetRequest struct {
	PathParams   DeletePetRequestPathParams
	HeaderParams DeletePetRequestHeaderParams
}

type DeletePetRequestPathParams struct {
	// PetId Pet id to delete
	PetId int64 `binding:"required" uri:"petId"`
}

type DeletePetRequestHeaderParams struct {
	APIKey *string `header:"api_key"`
}

type FindPetsByStatusRequest struct {
	// Status Status values that need to be considered for filter
	Status []string `binding:"required" form:"status"`
}

type FindPetsByTagsRequest struct {
	// Tags Tags to filter by
	Tags []string `binding:"required" form:"tags"`
}

type GetPetByIdRequest struct {
	// PetId ID of pet to return
	PetId int64 `binding:"required" uri:"petId"`
}

// UpdatePetRequest Pet object that needs to be added to the store
type UpdatePetRequest struct {
	// Pet A pet for sale in the pet store
	Pet `json:",inline"`
}

type UpdatePetWithFormRequest struct {
	PathParams  UpdatePetWithFormRequestPathParams
	QueryParams UpdatePetWithFormRequestQueryParams
	Body        UpdatePetWithFormRequestBody
}

type UpdatePetWithFormRequestPathParams struct {
	// PetId ID of pet that needs to be updated
	PetId int64 `binding:"required" uri:"petId"`
}

type UpdatePetWithFormRequestQueryParams struct {
	// Timestamp Timestamp of the update
	Timestamp *int64 `form:"timestamp"`
}

type UpdatePetWithFormRequestBody struct {
	// Name Updated name of the pet
	Name string `form:"name"`
	// Status Updated status of the pet
	Status string `form:"status"`
}

type UploadFileRequest struct {
	PathParams UploadFileRequestPathParams
	Body       UploadFileRequestBody
}

type UploadFileRequestPathParams struct {
	// PetId ID of pet to update
	PetId int64 `binding:"required" uri:"petId"`
}

type UploadFileRequestBody struct {
	// AdditionalMetadata Additional data to pass to server
	AdditionalMetadata string `form:"additionalMetadata"`
	// File file to upload
	File []byte `form:"file"`
}
